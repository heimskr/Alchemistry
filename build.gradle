plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'maven-publish'
    id 'java'
}

version = "$minecraft_version-$mod_version"
group = 'com.smashingmods'

java {
    archivesBaseName = 'alchemistry'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
}

minecraft {
    mappings channel: 'parchment', version: "$parchment_version-$minecraft_version"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            jvmArgs '-XX:+AllowEnhancedClassRedefinition'

            mods {
                alchemistry {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            jvmArgs '-XX:+AllowEnhancedClassRedefinition'
            args 'nogui'

            mods {
                alchemistry {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'alchemistry'

            mods {
                alchemistry {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            jvmArgs '-XX:+AllowEnhancedClassRedefinition'

            args '--mod', "$archivesBaseName", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                alchemistry {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url "https://maven.tamaized.com/releases" }
    maven { url "https://www.cursemaven.com" }
    maven { url "https://dvs1.progwml6.com/files/maven/" }
    maven { url "https://maven.blamejared.com" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("smashingmods:chemlib:${minecraft_version}-${chemlib_version}")
    implementation fg.deobf("smashingmods:alchemylib:${minecraft_version}-${alchemylib_version}")

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.19-${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.19-${patchouli_version}")

//    runtimeOnly fg.deobf("curse.maven:ctm-267602:3737369")
    runtimeOnly fg.deobf("curse.maven:mekanism-268560:4020942")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "$archivesBaseName",
                "Specification-Vendor"    : "SmashingMods",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "SmashingMods",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

artifacts {
    archives jar
    archives sourcesJar
}

def secrets = new Properties()
file('secrets.properties').withInputStream {
    stream -> secrets.load(stream)
}

fileTree("secrets").matching {
    include "**/*.properties"
}.each {
    File file ->
        file.withInputStream {
            stream -> secrets.load(stream)
        }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            afterEvaluate {
                artifact project.jar
                artifact project.sourcesJar
            }
            setGroupId 'smashingmods'
            setArtifactId 'alchemistry'
        }
    }
    repositories {
        maven {
            url "https://maven.tamaized.com/releases"
            credentials {
                username secrets.getProperty("maven_username")
                password secrets.getProperty("maven_password")
            }
        }
    }
}

curseforge {
    apiKey = secrets.getProperty("apiKey")
    project {
        id = '293425'
        releaseType = 'release'
        changelogType = 'markdown'
        changelog = file("changelog.md")
        addGameVersion 'Forge'
        addGameVersion 'Java 17'
        addGameVersion '1.19.2'
        mainArtifact(jar) {
            displayName = "Alchemistry - $project.version"
            relations {
                requiredDependency 'chemlib'
                requiredDependency 'alchemylib'
                optionalDependency 'jei'
                optionalDependency 'patchouli'
//                optionalDependency 'ctm'
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
